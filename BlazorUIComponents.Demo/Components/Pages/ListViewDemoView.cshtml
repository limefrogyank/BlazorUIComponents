@page "/listview"

@inherits NavPageBase<ListViewDemoViewModel>;
@inject IJSRuntime JSRuntime;

<h1>ListView Demo</h1>

<div class="custom-control custom-switch">
    <input type="checkbox" class="custom-control-input" id="customSwitch1" bind="@isChecked" />
    <label class="custom-control-label" for="customSwitch1">@(isChecked ? SelectionMode.Single : SelectionMode.None)</label>

</div>

@if (isChecked)
{
    <div>Selected Item:  @Vm.SelectedItem?.DisplayName</div>  
    @*There's a brief time period when isChecked is true and Vm.SelectedItem is still null... use null checking '?'*@
}

<ReactiveButton Classes="btn btn-primary" Command="@Vm.AddSampleItemCommand" >Add Item</ReactiveButton>

<ListView ItemsSource="@Vm.SampleItemViewModels"
          TItem="Core.ViewModel.ListViewDemo.SampleItemViewModel"
          SelectionMode=@(isChecked ? SelectionMode.Single : SelectionMode.None)
          bind-SelectedItem-OnSelectedItemChanged="@Vm.SelectedItem"

          ItemClicked=@OnItemClicked>
    <ItemTemplate Context="item">
        <h4>@item.DisplayName</h4>
        <h5>@item.Date</h5>
    </ItemTemplate>
</ListView>

@functions {
  
    bool isChecked = false;

   
    Task OnItemClicked(Core.ViewModel.ListViewDemo.SampleItemViewModel item)
    {
        Vm.SampleItemClickCommand.Execute(item).Subscribe();
        return Task.CompletedTask;
    }

}
